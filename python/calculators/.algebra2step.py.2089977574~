import re
from flask import jsonify
from python.utils import float_to_fraction_percent
from sympy import Eq, symbols, solve, sympify

def algebra2step_solve(data):
    try:
        equation = data['algebra2stepequation']
        equation = equation.replace('–', '-').replace('—', '-').replace('−','-').replace(' ', '').lower()
        equation = equation.replace('=', ',')
        letter_match = re.search(r'[a-z]', equation)
        letter = letter_match.group(0) if letter_match else None
        if letter:
            equation = equation.replace(letter, 'x')
        equation = re.sub(r'(\d)([xX(])', r'\1*\2', equation)
        equation = re.sub(r'(\))(\d)', r'\1*\2', equation)


        x = symbols('x')

        lhs, rhs = equation.split(',')
        lhs_expr = sympify(lhs)
        rhs_expr = sympify(rhs)
        equation = Eq(lhs_expr, rhs_expr)
        print(equation)
        solution = solve(equation, x)
        
        if '/' in solution:
        
            solution = str(solution[0])
            val1, val2 = solution.split('/')
            val1 = float(val1)
                val2 = float(val2)
                solution = val1 / val2
                
            else:
                result = jsonify({
                    'values': {
                        'solution': f'{letter} = {solution}',
                    }
                })
                return 
                    
        else:
            solution = str(solution[0])
            solution = float(solution)
        
        solution = float_to_fraction_percent(solution, '', False, False)
        result = jsonify({
            'values': {
                'solution': f'{letter} = {solution}',
            }
        })
        
        return result
    except Exception as e:
        result = jsonify({'error': str(e)})
        return result